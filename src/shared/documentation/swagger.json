{
  "openapi": "3.0.0",
  "info": {
    "description": "Documentation of life game emulator api",
    "version": "1.0.0",
    "title": "Life game emulator - api",
    "contact": {
      "email": "martins20.tech@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3333",
      "description": "Local"
    }
  ],
  "tags": [
    {
      "name": "Players",
      "description": "Player of game emulator."
    },
    {
      "name": "Buildings",
      "description": "Buildings of game emulator."
    }
  ],
  "paths": {
    "/players": {
      "post": {
        "tags": ["Players"],
        "summary": "Create a new player",
        "description": "This request will creates a new player",
        "produces": ["application/json"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "required": true
                  }
                }
              },
              "example": {
                "name": "John Doe"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Return the created player.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "balance": {
                      "type": "number"
                    },
                    "position": {
                      "type": "string"
                    },
                    "round": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Player already exists <br/><br/>Player name is required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Players"],
        "summary": "List all players",
        "description": "This request will list all storaged players",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Return the list of players player.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "balance": {
                        "type": "number"
                      },
                      "position": {
                        "type": "string"
                      },
                      "round": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/buildings": {
      "post": {
        "tags": ["Buildings"],
        "summary": "Create a new building",
        "description": "This request will creates a new building",
        "produces": ["application/json"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "required": true
                  },
                  "sale_cost": {
                    "type": "number",
                    "required": true
                  },
                  "rent_cost": {
                    "type": "number",
                    "required": true
                  }
                }
              },
              "example": {
                "name": "Doe's house",
                "sale_cost": 100,
                "rent_cost": 150
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Return the created building.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "sale_cist": {
                      "type": "number"
                    },
                    "rent_value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Building already exists <br/><br/>'sale_cost' must be greater than 0 <br/><br/>'rent_cost' must be greater than 0 <br/><br/>",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Buildings"],
        "summary": "List all buildings",
        "description": "This request will list all buildings",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Return the list of buildings.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "sale_cist": {
                        "type": "number"
                      },
                      "rent_value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/players/category": {
      "put": {
        "tags": ["Players"],
        "summary": "Set a player category",
        "description": "This request will set a player category",
        "produces": ["application/json"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "player_id": {
                    "type": "string",
                    "required": true
                  },
                  "category_name": {
                    "type": "string",
                    "required": true
                  }
                }
              },
              "example": {
                "player_id": "some-id-here",
                "category_name": "wary | random | impulsive | picky"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the player with the selected category.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "balance": {
                      "type": "number"
                    },
                    "category": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "buyBuildingCondictionResponseCallback": {
                          "type": "string"
                        }
                      }
                    },
                    "position": {
                      "type": "string"
                    },
                    "round": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Player not exists <br/><br/>Player category not exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/boards": {
      "post": {
        "tags": ["Boards"],
        "summary": "Create a new board",
        "description": "This request will creates a new board",
        "produces": ["application/json"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "required": true
                  },
                  "sale_cost": {
                    "type": "number",
                    "required": true
                  },
                  "rent_cost": {
                    "type": "number",
                    "required": true
                  }
                }
              },
              "example": {
                "name": "Doe's house",
                "sale_cost": 100,
                "rent_cost": 150
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Return the created board with suffled players.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "players": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "balance": {
                            "type": "number"
                          },
                          "position": {
                            "type": "string"
                          },
                          "round": {
                            "type": "number"
                          }
                        }
                      }
                    },
                    "buildings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "sale_cost": {
                            "type": "number",
                            "required": true
                          },
                          "rent_cost": {
                            "type": "number",
                            "required": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Cannot create board without players. <br/><br/>Cannot create board with just one player. <br/><br/>Cannot create board without buildings. <br/><br/>Cannot create board with players [${player_ids}] without a category. <br/><br/>Board must have ${quantity} builds quantity.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Buildings [${property_ids}] not exists <br/><br/>Players [${player_ids}] not exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/game": {
      "post": {
        "tags": ["Game"],
        "summary": "Create a new game",
        "description": "This request will creates a new game",
        "produces": ["application/json"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "board_id": {
                    "type": "string",
                    "required": true
                  }
                }
              },
              "example": {
                "board_id": "some-board-id"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Return the created game.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "round": {
                        "type": "string"
                      },
                      "max_rounds": {
                        "type": "number"
                      },
                      "is_game_finished": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Board not Exists.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/game/simulate": {
      "post": {
        "tags": ["Game"],
        "summary": "Simulate a game",
        "description": "This request will simulate an existent game",
        "produces": ["application/json"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "game_id": {
                    "type": "string",
                    "required": true
                  }
                }
              },
              "example": {
                "game_id": "some-game-id"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the created game.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "winner": {
                      "type": "string"
                    },
                    "players": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Cannot simulate a finished game.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Game not Exists.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
